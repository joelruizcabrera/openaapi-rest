swagger: '2.0'
info:
  description: A simple ToDo API
  version: 1.0.0
  title: ToDo API
  termsOfService: http://joelruizcabrera.com/
  contact:
    email: joel.schwegmann@gmx.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: api.todoler.com
# basePath: /
tags:
  - name: list
    description: Endpoints for handling with lists
    externalDocs:
      description: Find out more
      url: http://doc.todoler.com
  - name: entry
    description: Entry handlers
    externalDocs:
      description: Find out more
      url: http://doc.todoler.com
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: http://doc.todoler.com
schemes:
  - https
  - http
paths:
  /list/{listId}:
    get:
      tags:
        - list
      summary: gets a list by id
      description: ''
      operationId: getList
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: listId
          in: path
          description: ID of the list
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/List'
    delete:
      tags:
        - list
      summary: deletes a list by id
      description: ''
      operationId: deleteist
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: listId
          in: path
          description: ID of the list
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
  /list:
    post:
      tags:
        - list
      summary: Creates a new List
      description: ''
      operationId: createList
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: List values
          required: true
          schema:
            $ref: '#/definitions/CreateList'
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
  /list/{listId}/entry:
    post:
      tags:
        - entry
      summary: Creates a new Entry
      description: ''
      operationId: createEntry
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - name: listId
          in: path
          description: ID of the list
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Entry values
          required: true
          schema:
            $ref: '#/definitions/CreateEntry'
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
  /list/{listId}/entry/{entryId}:
    post:
      tags:
        - entry
      summary: Edit entry by id
      description: 'Edits entry by id'
      operationId: editEntry
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - name: listId
          in: path
          description: ID of the list
          required: true
          type: integer
          format: int64
        - name: entryId
          in: path
          description: ID of the entry
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Entry values
          required: true
          schema:
            $ref: '#/definitions/CreateEntry'
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
    delete:
      tags:
        - entry
      summary: Deletes entry by id
      description: 'Deletes entry by id'
      operationId: deleteEntry
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - name: listId
          in: path
          description: ID of the list
          required: true
          type: integer
          format: int64
        - name: entryId
          in: path
          description: ID of the entry
          required: true
          type: integer
          format: int64
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
  /users:
    post:
      tags:
        - user
      summary: Gets all users
      description: ' Gets all users'
      operationId: getUsers
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/GetUsers'
  /user:
    post:
      tags:
        - user
      summary: Creates a new User
      description: 'Creates a new User'
      operationId: createUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: List values
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        '200':
          description: Success
  /user/{userId}:
    delete:
      tags:
        - user
      summary: Deletes a User by id
      description: 'Deletes a User by id'
      operationId: deleteUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - name: userId
          in: path
          description: ID of the User
          required: true
          type: integer
          format: int64
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
definitions:
  GetUser:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      lists:
        type: array
        items:
          $ref: "#/definitions/List/properties/id"
  GetUsers:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/GetUser"
  NewUser:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
        format: password
  List:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      user:
        $ref: "#/definitions/GetUser/properties/id"
      entrys:
        type: array
        items:
          $ref: '#/definitions/Entry'
  Entry:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      duration:
        type: string
        format: date-time
      finished:
        type: integer
        format: int32
  CreateList:
    type: object
    properties:
      listName:
        type: string
      userId:
        $ref: "#/definitions/GetUser/properties/id"
  CreateEntry:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      duration:
        type: string
        format: date-time
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
